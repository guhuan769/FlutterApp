<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BackendInterface</name>
    </assembly>
    <members>
        <member name="T:BackendInterface.Controllers.PhotoController">
            <summary>
            照片上传和管理控制器
            </summary>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.#ctor(Microsoft.Extensions.Logging.ILogger{BackendInterface.Controllers.PhotoController},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            构造函数
            </summary>
            <param name="logger">日志记录器</param>
            <param name="environment">Web环境</param>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.Get">
            <summary>
            获取照片上传服务状态
            </summary>
            <returns>服务状态</returns>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.TestConnection">
            <summary>
            测试服务是否正常运行
            </summary>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.Upload(System.String,System.String,System.String,System.String)">
            <summary>
            上传照片API
            </summary>
            <remarks>
            通过表单上传照片文件并保存到服务器
            </remarks>
            <param name="moduleId">模块ID</param>
            <param name="moduleType">模块类型</param>
            <param name="photoType">照片类型</param>
            <param name="projectName">项目名称</param>
            <returns>上传结果</returns>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.BatchUpload(System.String,System.String,System.String)">
            <summary>
            批量上传照片API
            </summary>
            <remarks>
            允许一次性上传多张照片，返回批次ID用于查询状态
            </remarks>
            <param name="moduleId">模块ID</param>
            <param name="moduleType">模块类型</param>
            <param name="projectName">项目名称</param>
            <returns>批量上传结果</returns>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.GetUploadStatus(System.String)">
            <summary>
            获取上传状态
            </summary>
            <param name="batchId">批次ID</param>
            <returns>上传状态</returns>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.ProcessBatchUploadAsync(System.String,System.String,System.String,System.String,Microsoft.AspNetCore.Http.IFormFileCollection)">
            <summary>
            处理批量上传的实际逻辑
            </summary>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.UpdateUploadProgress(System.String,System.Int32)">
            <summary>
            更新上传进度
            </summary>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.MarkUploadAsCompleted(System.String)">
            <summary>
            标记上传完成
            </summary>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.MarkUploadAsPartialSuccess(System.String,System.String,System.Int32)">
            <summary>
            标记部分上传成功
            </summary>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.MarkUploadAsFailed(System.String,System.String)">
            <summary>
            标记上传失败
            </summary>
        </member>
        <member name="M:BackendInterface.Controllers.PhotoController.DeleteProjectPhotos(System.String,System.String)">
            <summary>
            删除指定项目的所有照片
            </summary>
            <param name="moduleId">模块ID</param>
            <param name="moduleType">模块类型</param>
            <returns>删除结果</returns>
        </member>
        <member name="T:BackendInterface.Controllers.UploadStatus">
            <summary>
            上传状态类
            </summary>
        </member>
        <member name="T:BackendInterface.Controllers.TestController">
            <summary>
            测试控制器
            </summary>
        </member>
        <member name="M:BackendInterface.Controllers.TestController.Get">
            <summary>
            获取测试信息
            </summary>
            <returns>简单的测试信息</returns>
        </member>
    </members>
</doc>
