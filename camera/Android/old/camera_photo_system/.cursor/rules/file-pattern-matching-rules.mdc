---
description: 
globs: *.kt,*.java
alwaysApply: false
---
# *.kt, *.java文件规则
- 包结构按功能模块划分：
  - com.example.cameraproject.project (项目模块)
  - com.example.cameraproject.vehicle (车辆模块)
  - com.example.cameraproject.track (轨迹模块)
  - com.example.cameraproject.common (公共组件)
  - com.example.cameraproject.network (网络层)
- 每个功能模块实现对应的Repository, UseCase, ViewModel
- 使用Kotlin Data Class表示数据模型
- 使用密封类(sealed class)处理UI状态
- 使用扩展函数增强代码可读性
- 视图层使用Fragment，避免重Activity
- 单元测试覆盖率不低于70%


# Kotlin与Java文件检查规则

## 包结构一致性
- 严格遵循包结构划分：com.example.cameraproject.[module].[layer]
- 项目模块代码必须放在com.example.cameraproject.project包下
- 车辆模块代码必须放在com.example.cameraproject.vehicle包下
- 轨迹模块代码必须放在com.example.cameraproject.track包下
- 公共组件必须放在com.example.cameraproject.common包下
- 网络相关代码必须放在com.example.cameraproject.network包下

## 方法命名与重复检测
- 相机功能方法命名格式：capture[Module][PhotoType]Photo()，如captureProjectModelPhoto()
- 相册功能方法命名格式：browse[Module]Photos()，如browseVehiclePhotos()
- 上传功能方法命名格式：upload[Module]Data()，如uploadProjectData()
- 不同模块中的同名方法必须添加模块前缀区分，避免混淆

## 类设计规范
- Repository命名必须为[Module]Repository，如ProjectRepository
- 数据模型必须使用Kotlin Data Class实现
- UI状态必须使用密封类(sealed class)，格式为[Feature]UiState
- ViewModel必须继承AndroidViewModel或ViewModel，命名为[Feature]ViewModel