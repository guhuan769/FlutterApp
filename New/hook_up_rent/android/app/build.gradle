def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"





android {

    // 自定义APK安装包名，只需更改outputFileName的拼接赋值
    // Android Studio 可以在控制台点击路径打开目录，不能点击则Run cd path
    // 输出路径：build/app/outputs/apk/debug/
    // 输出路径：build/app/outputs/apk/release/
    // 输出路径：build/app/outputs/apk/profile/
//    println("Apk out info:")
//    applicationVariants.all { variant ->
//        variant.outputs.all {
//            def appName = 'MyAppName'
//            def buildType = variant.variantData.variantConfiguration.buildType.name
//            // 输入结果如：MyAppName-0.5.1-release.apk
//            outputFileName = "${appName}-${defaultConfig.versionName}-${buildType}.apk"
//            println("  L Terminal Run : cd "+ rootProject.buildDir + "/app/outputs/apk/${buildType}/" + "  file: ${outputFileName}")
//        }
//    }

    namespace "com.example.hook_up_rent"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.hook_up_rent"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    // 修改输出APP名 gh
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    if (outputFile.name.endsWith('.apk')) {
                        def fileName = "oriental"
                        //outputFileName = "数据监控系统 v${variant.versionName}.apk"
                        outputFileName = "数据监控系统.apk"
                    }
            }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
